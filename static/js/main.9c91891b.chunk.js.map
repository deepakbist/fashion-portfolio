{"version":3,"sources":["firebase.js","actions/index.js","reducers/index.js","store/index.js","components/Homepage.js","App.js","components/ProfileDetails.js","components/GeneralDetails.js","components/ImagesForm.js","components/UserForm.js","components/EditUser.js","serviceWorker.js","index.js","components/Portfolio.js","components/PorfolioGrid.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","storage","addPortfolio","payload","type","uploadImage","file","ref","dispatch","storageRef","child","put","then","snapshot","getDownloadURL","url","catch","err","console","error","deleteImage","delete","updateCurrent","initialState","firstName","lastName","mobile","email","height","address","weight","dob","images","rootReducer","combineReducers","currentUser","state","action","Object","assign","concat","filter","img","allPortfolios","map","portfolio","id","store","createStore","applyMiddleware","thunkMiddleware","useStyles","makeStyles","theme","box","textAlign","button1","width","spacing","caption","fontSize","button2","marginTop","classes","useDispatch","React","useEffect","getState","collection","get","querySnapshot","forEach","doc","log","data","toDate","Box","display","className","justifyContent","flexDirection","alignItems","Typography","variant","gutterBottom","mt","style","textDecoration","to","Button","color","App","Homepage","ProfileDetailForm","withFormik","mapPropsToValues","validationSchema","Yup","shape","required","matches","handleSubmit","values","bag","props","handleFieldsChange","handleNext","touched","errors","handleChange","handleBlur","Grid","container","item","xs","md","TextField","label","value","onChange","onBlur","helperText","Boolean","txtField","onClick","button","GeneralDetailForm","Date","positive","integer","default","handleBack","setFieldValue","utils","DateFnsUtils","inputVariant","format","placeholder","date","datepicker","KeyboardButtonProps","Alert","elevation","useState","portfolioImages","setPortfolioImages","open","setOpen","handleClose","event","reason","imageGrid","length","i","padding","maxWidth","maxHeight","src","alt","Snackbar","autoHideDuration","onClose","severity","onChangeStatus","status","meta","uuidv4","image","name","f","accept","maxSizeBytes","inputContent","files","extra","reject","inputWithFilesContent","styles","dropzone","overflow","minHeight","dropzoneReject","borderColor","backgroundColor","inputLabel","preview","inputLabelWithFiles","alignSelf","margin","previewImage","mainGrid","background","formContainer","borderRadius","marginRight","initialValues","UserForm","useSelector","setValues","history","useHistory","activeStep","setActiveStep","prevActiveStep","receivedValues","Container","Stepper","alternativeLabel","index","labelProps","Step","key","StepLabel","ProfileDetails","GeneralDetails","ImagesForm","add","docRef","push","update","window","location","hostname","match","ReactDOM","render","path","exact","component","setStatus","fontFamily","Divider","EditUser","porfolioGrid","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"gSAeAA,gBAXuB,CACnBC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,2CACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKZ,IAAMC,EAAKT,cACLU,EAAUV,YCDhB,SAASW,EAAaC,GACzB,MAAM,CACFC,KAhBqB,gBAiBrBD,WAMD,SAASE,EAAYC,EAAKC,GAC7B,OAAO,SAACC,GACJ,IAAIC,EAAaR,EAAQM,MAAMG,MAAMH,GACrCE,EAAWE,IAAIL,GAAMM,MAAK,SAASC,GAC/BJ,EAAWK,iBAAiBF,MAAK,SAASG,GACtCP,EA4BN,CACFJ,KAxDiB,YAyDjBD,QA9B0B,CAACY,MAAIR,YACxBS,OAAM,SAASC,GACdC,QAAQC,MAAM,2BAA2BF,UAMlD,SAASG,EAAYd,GACxB,OAAO,SAACE,GACaP,EAAQM,MAAMG,MAAMJ,EAAKC,KAC/Bc,SAAST,MAAK,WACrBJ,EASD,CACHJ,KA/CoB,eAgDpBD,QAXyBG,OACpBU,OAAM,SAASG,GACdD,QAAQC,MAAM,yBAAyBA,OAoB9C,SAASG,EAAcnB,GAC1B,MAAM,CACFC,KA5DsB,iBA6DtBD,WCxDR,IAAMoB,EAAe,CACnBC,UAAW,GACXC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,OAAQ,GACRC,IAAK,GACLC,OAAQ,IA0CV,IAKiBC,EALGC,YAAgB,CAChCC,YAxCJ,WAAoD,IAA/BC,EAA8B,uDAAtBb,EAAcc,EAAQ,uCAC/C,OAAQA,EAAOjC,MACb,IDnBwB,iBCoBtB,OAAOkC,OAAOC,OAAO,GAAIH,EAAOC,EAAOlC,SACzC,IDxBmB,YCyBjB,OAAOmC,OAAOC,OAAO,GAAIH,EAAO,CAC9BJ,OAAQI,EAAMJ,OAAOQ,OAAOH,EAAOlC,WAEvC,ID1BsB,eC2BpB,OAAOmC,OAAOC,OAAO,GAAIH,EAAO,CAC9BJ,OAAQI,EAAMJ,OAAOS,QAAO,SAAAC,GAC1B,OAAQA,EAAI3B,MAAQsB,EAAOlC,QAAQY,SAGzC,QACE,OAAOqB,IA0BXO,cArBJ,WAAwC,IAAjBP,EAAgB,uDAAV,GAAGC,EAAO,uCACnC,OAAOA,EAAOjC,MACV,ID3CqB,gBC4CnB,MAAM,GAAN,mBAAWgC,GAAX,CAAiBC,EAAOlC,UAE1B,ID/CwB,mBCgDtB,OAAOiC,EAAMQ,KAAI,SAAAC,GACf,OAAGA,EAAUC,KAAOT,EAAOlC,QAAQ2C,GAC1BT,EAAOlC,QAET0C,KAEX,IDhDkB,aCiDhB,MAAO,GACT,QACE,OAAOT,MCrDJW,EAAQC,YACjBf,EACAgB,YAAgBC,M,8ECEdC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,IAAI,CACAC,UAAW,UAEfC,QAAQ,CACJC,MAAOJ,EAAMK,QAAQ,IACrB9B,OAAQyB,EAAMK,QAAQ,IAE1BC,QAAQ,CACJC,SAAU,SAEdC,QAAQ,CACJJ,MAAOJ,EAAMK,QAAQ,IACrB9B,OAAQyB,EAAMK,QAAQ,GACtBI,UAAW,WAIJ,aAEX,IAAMC,EAAUZ,IACV3C,EAAWwD,cAIjB,OAHAC,IAAMC,WAAU,WACZ1D,GHqEG,SAACA,EAAS2D,GACb3D,EAPE,CACFJ,KAzFkB,eAgGlBJ,EAAGoE,WAAW,SAASC,MAAMzD,MAAK,SAAC0D,GAC/BA,EAAcC,SAAQ,SAACC,GACnBtD,QAAQuD,IAAR,UAAeD,EAAI1B,GAAnB,eAA4B0B,EAAIE,SAChC,IAAIvE,EAAU,GACdA,EAAQ2C,GAAK0B,EAAI1B,GACjB3C,EAAQuE,KAAOF,EAAIE,OACnBvE,EAAQuE,KAAK3C,IAAM5B,EAAQuE,KAAK3C,IAAM5B,EAAQuE,KAAK3C,IAAI4C,SAAW,GAClExE,EAAQuE,KAAK5B,GAAK0B,EAAI1B,GACtBtC,EAASN,EAAaC,eG9EhC,IAEE,6BACI,kBAACyE,EAAA,EAAD,CAAKC,QAAQ,OAAOC,UAAWf,EAAQT,IAAKyB,eAAe,SAASC,cAAc,SAASC,WAAW,UAClG,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,qBAGA,kBAACF,EAAA,EAAD,CAAYJ,UAAWf,EAAQJ,QAASwB,QAAQ,UAAUN,QAAQ,QAAQO,cAAY,GAAtF,iEAGA,kBAACF,EAAA,EAAD,CAAYC,QAAQ,YAAYC,cAAY,GAA5C,oBAIJ,kBAACR,EAAA,EAAD,CAAKS,GAAG,MAAMR,QAAQ,OAAOE,eAAe,SAASC,cAAc,SAASC,WAAW,UACvF,kBAAC,IAAD,CAAMK,MAAO,CAACC,eAAe,QAASC,GAAG,WAAU,kBAACC,EAAA,EAAD,CAAQN,QAAQ,YAAYL,UAAWf,EAAQP,QAASkC,MAAM,WAA9D,qBAEnD,kBAAC,IAAD,CAAMJ,MAAO,CAACC,eAAe,QAASC,GAAG,kBAAiB,kBAACC,EAAA,EAAD,CAAQX,UAAWf,EAAQF,QAASsB,QAAQ,YAA5C,uBCvCvDQ,MARf,WACE,OACE,yBAAKb,UAAU,OACb,kBAACc,EAAD,Q,2CCuGaC,EA7BOC,YAAW,CAC7BC,iBAAkB,YAMhB,MAAO,CACLvE,UAFE,EAJJA,WAM0B,GACxBC,SAHE,EAHJA,UAMwB,GACtBE,MAJE,EAFJA,OAMkB,GAChBD,OALE,EADJA,QAMoB,KAItBsE,iBAAkBC,MAAaC,MAAM,CACnC1E,UAAWyE,MAAaE,SAAS,YACjC1E,SAAUwE,MAAaE,SAAS,YAChCxE,MAAOsE,MAAatE,MAAM,uBAAuBwE,SAAS,qBAC1DzE,OAAQuE,MAAaG,QAAQ,0GAA2G,6BAA6BD,SAAS,gCAGhLE,aAAc,SAACC,EAAOC,GACpBA,EAAIC,MAAMC,mBAAmBH,GAC7BC,EAAIC,MAAME,eAxBMZ,EA1EA,SAACU,GAAS,IAE5BzC,EAOEyC,EAPFzC,QACAuC,EAMEE,EANFF,OACAK,EAKEH,EALFG,QACAC,EAIEJ,EAJFI,OACAC,EAGEL,EAHFK,aACAC,EAEEN,EAFFM,WACAT,EACEG,EADFH,aAEJ,OACI,kBAACU,EAAA,EAAD,CAAMC,WAAS,EAACtD,QAAS,GACrB,kBAACqD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,kBAACC,EAAA,EAAD,CACItE,GAAG,YACHuE,MAAM,aACNC,MAAOhB,EAAO9E,UACd+F,SAAUV,EACVW,OAAQV,EACRW,WAAYd,EAAQnF,UAAYoF,EAAOpF,UAAY,GACnDL,MAAOwF,EAAQnF,WAAakG,QAAQd,EAAOpF,WAC3C2D,QAAQ,WACRL,UAAWf,EAAQ4D,YAG3B,kBAACZ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,kBAACC,EAAA,EAAD,CACItE,GAAG,WACHuE,MAAM,YACNC,MAAOhB,EAAO7E,SACd0D,QAAQ,WACRoC,SAAUV,EACVW,OAAQV,EACRW,WAAYd,EAAQlF,SAAWmF,EAAOnF,SAAW,GACjDN,MAAOwF,EAAQlF,UAAYiG,QAAQd,EAAOnF,UAC1CqD,UAAWf,EAAQ4D,YAI3B,kBAACZ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,kBAACC,EAAA,EAAD,CACItE,GAAG,QACHuE,MAAM,QACNC,MAAOhB,EAAO3E,MACdmD,UAAWf,EAAQ4D,SACnBJ,SAAUV,EACVW,OAAQV,EACRW,WAAYd,EAAQhF,MAAQiF,EAAOjF,MAAQ,GAC3CR,MAAOwF,EAAQhF,OAAS+F,QAAQd,EAAOjF,OACvCwD,QAAQ,cAGhB,kBAAC4B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,kBAACC,EAAA,EAAD,CACItE,GAAG,SACHuE,MAAM,iBACNC,MAAOhB,EAAO5E,OACdoD,UAAWf,EAAQ4D,SACnBJ,SAAUV,EACVW,OAAQV,EACRW,WAAYd,EAAQjF,OAASkF,EAAOlF,OAAS,GAC7CP,MAAOwF,EAAQjF,QAAUgG,QAAQd,EAAOlF,QACxCyD,QAAQ,cAGhB,kBAAC4B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAACtC,EAAA,EAAD,CAAKS,GAAG,OACJ,kBAACI,EAAA,EAAD,CAAQrF,KAAK,SAAS+E,QAAQ,YAAYyC,QAASvB,EAAcvB,UAAWf,EAAQ8D,OAAQnC,MAAM,WAAlG,c,0BC6DLoC,EAjCWhC,YAAW,CACjCC,iBAAkB,YAKX,IAJLnE,EAII,EAJJA,OACAE,EAGI,EAHJA,OACAC,EAEI,EAFJA,IACAF,EACI,EADJA,QAEA,MAAO,CACLD,OAAQA,GAAU,GAClBE,OAAQA,GAAU,GAClBC,IAAKA,GAAO,IAAIgG,KAChBlG,QAASA,GAAW,KAIxBmE,iBAAkBC,MAAaC,MAAM,CACnCtE,OAAQqE,MACPE,SAAS,qBACT6B,WACAC,UACDnG,OAAQmE,MACPE,SAAS,qBACT6B,WACDjG,IAAKkE,MAAWiC,QAAQ,IAAIH,MAAQ5B,SAAS,6BAC7CtE,QAASoE,MAAaE,SAAS,yBAGjCE,aAAc,SAACC,EAAQC,GACnBA,EAAIC,MAAMC,mBAAmBH,GAC7BC,EAAIC,MAAME,eA7BQZ,EA1FA,SAACU,GAAS,IAE5BzC,EASAyC,EATAzC,QACAuC,EAQAE,EARAF,OACAK,EAOAH,EAPAG,QACAC,EAMAJ,EANAI,OACAC,EAKAL,EALAK,aACAC,EAIAN,EAJAM,WACAT,EAGAG,EAHAH,aACA8B,EAEA3B,EAFA2B,WACAC,EACA5B,EADA4B,cAEJ,OACI,kBAACrB,EAAA,EAAD,CAAMC,WAAS,EAACtD,QAAS,GACrB,kBAACqD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,kBAACC,EAAA,EAAD,CACItE,GAAG,SACHuE,MAAM,eACNC,MAAOhB,EAAO1E,OACduD,QAAQ,WACRoC,SAAUV,EACVW,OAAQV,EACRW,WAAYd,EAAQ/E,OAASgF,EAAOhF,OAAS,GAC7CT,MAAOwF,EAAQ/E,QAAU8F,QAAQd,EAAOhF,QACxCkD,UAAWf,EAAQ4D,YAG3B,kBAACZ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,kBAACC,EAAA,EAAD,CACItE,GAAG,SACHuE,MAAM,eACNC,MAAOhB,EAAOxE,OACdqD,QAAQ,WACRoC,SAAUV,EACVW,OAAQV,EACRW,WAAYd,EAAQ7E,OAAS8E,EAAO9E,OAAS,GAC7CX,MAAOwF,EAAQ7E,QAAU4F,QAAQd,EAAO9E,QACxCgD,UAAWf,EAAQ4D,YAI3B,kBAACZ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,kBAACC,EAAA,EAAD,CACItE,GAAG,UACHuE,MAAM,eACNC,MAAOhB,EAAOzE,QACdiD,UAAWf,EAAQ4D,SACnBJ,SAAUV,EACVW,OAAQV,EACRW,WAAYd,EAAQ9E,QAAU+E,EAAO/E,QAAU,GAC/CV,MAAOwF,EAAQ9E,SAAW6F,QAAQd,EAAO/E,SACzCsD,QAAQ,cAGhB,kBAAC4B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,kBAAC,IAAD,CAAyBkB,MAAOC,KAC5B,kBAAC,IAAD,CACInD,QAAQ,SACRoD,aAAa,WACbC,OAAO,aACP1F,GAAG,MACH2F,YAAY,aACZpB,MAAM,gBACNC,MAAOhB,EAAOvE,IACdwF,SAAU,SAAAmB,GAAI,OAAIN,EAAc,MAAOM,GAAM,IAC7ClB,OAAQV,EACRW,WAAYd,EAAQ5E,IAAM6E,EAAO7E,IAAM,GACvCZ,MAAOwF,EAAQ5E,KAAO2F,QAAQd,EAAO7E,KACrC+C,UAAWf,EAAQ4E,WACnBC,oBAAqB,CACjB,aAAc,mBAK9B,kBAAC7B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAACtC,EAAA,EAAD,CAAKS,GAAG,OACJ,kBAACI,EAAA,EAAD,CACImC,QAASO,EACTrD,UAAWf,EAAQ8D,QAFvB,QAMA,kBAACpC,EAAA,EAAD,CAAQrF,KAAK,SAAS+E,QAAQ,YAAYyC,QAASvB,EAAcvB,UAAWf,EAAQ8D,OAAQnC,MAAM,WAAlG,c,sDCnFpB,SAASmD,EAAMrC,GACX,OAAO,kBAAC,IAAD,eAAUsC,UAAW,EAAG3D,QAAQ,UAAaqB,IAGzC,eAACA,GAAS,IAAD,EACyBvC,IAAM8E,SAAS,IADxC,mBACbC,EADa,KACGC,EADH,KAEdzI,EAAWwD,cAFG,EAGIC,IAAM8E,UAAS,GAHnB,mBAGbG,EAHa,KAGPC,EAHO,KAIdC,EAAc,SAACC,EAAOC,GACT,cAAXA,GAIJH,GAAQ,IAGRpF,EAEAyC,EAFAzC,QACA/B,EACAwE,EADAxE,OAqBAuH,EAAY,GACbvH,GAAUA,EAAOwH,OAAO,IACvBD,EAAY,kBAACxC,EAAA,EAAD,CAAMC,WAAS,EAACtD,QAAS,GAErB1B,EAAOY,KAAI,SAACF,EAAI+G,GAAL,OACP,kBAAC1C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,GAClB,kBAACvC,EAAA,EAAD,CAAKC,QAAQ,OAAOE,eAAe,SAAS2E,QAAQ,OAChD,yBAAKpE,MAAO,CAACqE,SAAS,OAAOC,UAAU,QAASC,IAAKnH,EAAI3B,IAAK+I,IAAI,eAmBlG,OACI,kBAAClF,EAAA,EAAD,KACI,kBAACmF,EAAA,EAAD,CAAUb,KAAMA,EAAMc,iBAAkB,IAAMC,QAASb,GACnD,kBAAC,EAAD,CAAOa,QAASb,EAAac,SAAS,SAAtC,qCAIJ,kBAACtF,EAAA,EAAD,KACK2E,GAEL,kBAAC3E,EAAA,EAAD,CAAKS,GAAG,OACJ,kBAAC,IAAD,CACI8E,eAxDW,SAAC,EAAgBC,GAAY,IAA1BC,EAAyB,EAAzBA,KAAM/J,EAAmB,EAAnBA,KAEhC,GADAY,QAAQuD,IAAI2F,EAAQC,EAAM/J,GACZ,SAAX8J,EAAkB,CACjB,IAAI7J,EAAM,UAAY+J,cACtBrB,EAAmBD,EAAgBxG,OAAO,CAAClC,OAAKC,SAChDC,EAASH,EAAYC,EAAKC,IAEhB,YAAX6J,IACCpB,EAAgBpG,KAAI,SAAA2H,GAIhB,OAHGA,EAAMjK,KAAKkK,OAAOlK,EAAKkK,MACtBhK,EAASY,EAAYmJ,IAElB,QAEXtB,EAAmBD,EAAgBvG,QAAO,SAACgI,GAAD,OAAKA,EAAEnK,KAAKkK,OAASlK,EAAKkK,WA2C5DE,OAAO,UACPC,aAAc,QACdC,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAMC,OAAS,oCAAsC,4CACtFC,sBAAwB,kBACxBC,OAAQ,CACJC,SAAS,CAACC,SAAS,SAASC,UAAU,OACtCC,eAAgB,CAAEC,YAAa,MAAOC,gBAAiB,QACvDC,WAAY,SAACX,EAAOC,GAAR,OAAmBA,EAAMC,OAAS,CAAErF,MAAO,OAAU,IACjE+F,QAAS,CAAC1G,eAAe,UACzB2G,oBAAqB,CAACC,UAAW,SAASC,OAAO,OACjDC,aAAc,CAAClC,SAAS,MAAMC,UAAW,YAIrD,kBAAChF,EAAA,EAAD,CAAKS,GAAG,OACJ,kBAACI,EAAA,EAAD,CACQmC,QAASpB,EAAM2B,WACfrD,UAAWf,EAAQ8D,QAF3B,QAMA,kBAACpC,EAAA,EAAD,CAAQrF,KAAK,SAAS+E,QAAQ,YAAYyC,QA7CnC,aAEZoB,EAAgBQ,OAAO,IACjBxH,GAAUA,EAAOwH,OAAO,EAKjChD,EAAMH,eAJE8C,GAAQ,IAyCuDrE,UAAWf,EAAQ8D,OAAQnC,MAAM,WAAhG,a,oCC7FVvC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyI,SAAS,CACLC,WAAY,UACZX,UAAW,SAEfY,cAAe,CACXtC,QAAS,MACTqC,WAAY,OACZE,aAAc,QACd1I,UAAU,UAEdoE,SAAS,CACLlE,MAAO,QAEXoE,OAAQ,CACJqE,YAAa7I,EAAMK,QAAQ,GAC3BD,MAAO,QAEXkF,WAAW,CACPlF,MAAO,YAIT0I,EAAgB,CAClB3K,UAAW,GACXC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,OAAQ,GACRC,IAAK,GACLC,OAAQ,IA2EGoK,EAxEE,SAAA5F,GAEb,IAAMrE,EAAckK,aAAY,SAAAjK,GAAK,OAAIA,EAAMD,eACzC3B,EAAWwD,cACXD,EAAUZ,IAJK,EAKOc,IAAM8E,SAASoD,GALtB,mBAKd7F,EALc,KAKNgG,EALM,KAMfC,EAAUC,cANK,EAQevI,IAAM8E,SAAS,GAR9B,mBAQd0D,EARc,KAQFC,EARE,KAafhG,EAAa,WACfgG,GAAc,SAACC,GAAD,OAAoBA,EAAiB,MAGjDxE,EAAa,WACfuE,GAAc,SAACC,GAAD,OAAoBA,EAAiB,MAGjD9F,EAAe,SAAC+F,GAClBN,EAAUhK,OAAOC,OAAO,GAAG+D,EAAOsG,KAWtC,OACQ,kBAAChI,EAAA,EAAD,CAAKE,UAAWf,EAAQ+H,SAAUjH,QAAQ,OAAOE,eAAe,SAASE,WAAW,UAChF,kBAAC4H,EAAA,EAAD,CAAWlD,SAAS,KAAK7E,UAAWf,EAAQiI,eACxC,kBAAC9G,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,iCAGA,kBAACR,EAAA,EAAD,CAAKS,GAAG,OACJ,kBAACyH,EAAA,EAAD,CAASL,WAAYA,EAAYM,kBAAgB,GA/BvD,CAAC,iBAAkB,iBAAkB,oBAgCpBnK,KAAI,SAACyE,EAAO2F,GACf,IACMC,EAAa,GACnB,OACI,kBAACC,EAAA,EAAD,eAAMC,IAAK9F,GAHG,IAId,kBAAC+F,EAAA,EAAcH,EAAa5F,SAM5C,kBAACzC,EAAA,EAAD,CAAKS,GAAG,OAEe,IAAfoH,GACA,kBAACY,EAAD,CAAgB7L,UAAW8E,EAAO9E,UAAWC,SAAU6E,EAAO7E,SAAUE,MAAO2E,EAAO3E,MAAOD,OAAQ4E,EAAO5E,OAAQqC,QAASA,EAAS2C,WAAYA,EAAYD,mBAAoBI,IAInK,IAAf4F,GACA,kBAACa,EAAD,CAAgBzL,QAASyE,EAAOzE,QAASD,OAAQ0E,EAAO1E,OAAQE,OAAQwE,EAAOxE,OAAQC,IAAKuE,EAAOvE,IAAKuE,OAAQA,EAAQvC,QAASA,EAAS2C,WAAYA,EAAYyB,WAAYA,EAAY1B,mBAAoBI,IAG/L,IAAf4F,GACA,kBAACc,EAAD,CAAYjH,OAAQA,EAAQvC,QAASA,EAASoE,WAAYA,EAAY9B,aAvCzE,WRLlB,IAA0BlG,EQMzBmG,EAAOtE,OAASG,EAAYH,OAC5BsK,EAAUhG,GACV9F,GRRyBL,EQQCmG,ERPvB,SAAC9F,EAAS2D,GACbnE,EAAGoE,WAAW,SAASoJ,IAAIrN,GAASS,MAAK,SAAS6M,GAC9CjN,EAASN,EAAa,CAAC4C,GAAG2K,EAAO3K,GAAG4B,KAAKvE,KACzCA,EAAQ2C,GAAK2K,EAAO3K,GACpBtC,EAASc,EAAcnB,OACxBa,OAAM,SAASG,GACdD,QAAQC,MAAM,0BAA2BA,SQE7CoL,EAAQmB,KAAK,qB,UChEfvK,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyI,SAAS,CACLC,WAAY,UACZX,UAAW,SAEfY,cAAe,CACXtC,QAAS,MACTqC,WAAY,OACZE,aAAc,QACd1I,UAAU,UAEdoE,SAAS,CACLlE,MAAO,QAEXoE,OAAQ,CACJqE,YAAa7I,EAAMK,QAAQ,GAC3BD,MAAO,QAEXkF,WAAW,CACPlF,MAAO,YAIT0I,GAAgB,CAClB3K,UAAW,GACXC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,OAAQ,GACRC,IAAK,GACL8I,MAAO,IA4EIuB,GAzEE,SAAA5F,GACb,IAAMzC,EAAUZ,KACV3C,EAAWwD,cACXuI,EAAUC,cACVrK,EAAckK,aAAY,SAAAjK,GAAK,OAAIA,EAAMD,eAJ1B,EAKO8B,IAAM8E,SAAS5G,GAA4BgK,IALlD,mBAKd7F,EALc,KAKNgG,EALM,OAOerI,IAAM8E,SAAS,GAP9B,mBAOd0D,EAPc,KAOFC,EAPE,KAYfhG,EAAa,WACfgG,GAAc,SAACC,GAAD,OAAoBA,EAAiB,MAGjDxE,EAAa,WACfuE,GAAc,SAACC,GAAD,OAAoBA,EAAiB,MAGjD9F,EAAe,SAAC+F,GAClBN,EAAUhK,OAAOC,OAAO,GAAG+D,EAAOsG,KAatC,OACQ,kBAAChI,EAAA,EAAD,CAAKE,UAAWf,EAAQ+H,SAAUjH,QAAQ,OAAOE,eAAe,SAASE,WAAW,UAChF,kBAAC4H,EAAA,EAAD,CAAWlD,SAAS,KAAK7E,UAAWf,EAAQiI,eACxC,kBAAC9G,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,kBAGA,kBAACR,EAAA,EAAD,CAAKS,GAAG,OACJ,kBAACyH,EAAA,EAAD,CAASL,WAAYA,EAAYM,kBAAgB,GAjCvD,CAAC,iBAAkB,iBAAkB,oBAkCpBnK,KAAI,SAACyE,EAAO2F,GACf,IACMC,EAAa,GACnB,OACI,kBAACC,EAAA,EAAD,eAAMC,IAAK9F,GAHG,IAId,kBAAC+F,EAAA,EAAcH,EAAa5F,SAM5C,kBAACzC,EAAA,EAAD,CAAKS,GAAG,OAEe,IAAfoH,GACA,kBAACY,EAAD,CAAgB7L,UAAW8E,EAAO9E,UAAWC,SAAU6E,EAAO7E,SAAUE,MAAO2E,EAAO3E,MAAOD,OAAQ4E,EAAO5E,OAAQqC,QAASA,EAAS2C,WAAYA,EAAYD,mBAAoBI,IAInK,IAAf4F,GACA,kBAACa,EAAD,CAAgBzL,QAASyE,EAAOzE,QAASD,OAAQ0E,EAAO1E,OAAQE,OAAQwE,EAAOxE,OAAQC,IAAKuE,EAAOvE,IAAKuE,OAAQA,EAAQvC,QAASA,EAAS2C,WAAYA,EAAYyB,WAAYA,EAAY1B,mBAAoBI,IAG/L,IAAf4F,GACA,kBAACc,EAAD,CAAYjH,OAAQA,EAAQvC,QAASA,EAASsC,aAzCjD,WTQlB,IAA2BlG,ESP1BmG,EAAOtE,OAASG,EAAYH,OAC5BsK,EAAUhG,GACV9F,GTK0BL,ESLCmG,ETMxB,SAAC9F,GACJR,EAAGoE,WAAW,SAASI,IAAIrE,EAAQ2C,IAAI6K,OAAOxN,GAASS,MAAK,WACxDJ,EAASN,EAAa,CAAC4C,GAAG3C,EAAQ2C,GAAG4B,KAAKvE,KAC1CK,EAASc,EAAcnB,OACxBa,OAAM,SAASC,GACdC,QAAQuD,IAAI,eSVhB8H,EAAQmB,KAAK,eAqCiFvF,WAAYA,EAAYnG,OAAQG,EAAYH,aCzG9H0F,QACW,cAA7BkG,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCHNC,IAASC,OACP,kBAAC,IAAD,CAAUlL,MAAOA,GACf,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CAAOmL,KAAK,IAAIC,OAAK,EAACC,UAAWzI,IACjC,kBAAC,IAAD,CAAOuI,KAAK,UAAUC,OAAK,EAACC,UAAWhC,IACvC,kBAAC,IAAD,CAAO8B,KAAK,aAAaC,OAAK,EAACC,UCdxB,WACX,IAAMjM,EAAckK,aAAY,SAAAjK,GAAK,OAAIA,EAAMD,eADhC,EAEY8B,IAAM8E,SAAS,UAF3B,mBAERqB,EAFQ,KAEDiE,EAFC,KAGT9E,EAAY,kBAACxC,EAAA,EAAD,CAAMC,WAAS,EAACtD,QAAS,GAEnCvB,EAAYH,OAAOY,KAAI,SAAC2H,EAAMyC,GAAP,OACnB,kBAACjG,EAAA,EAAD,CAAMoG,IAAKH,EAAO/F,MAAI,EAACC,GAAI,GAAIC,GAAI,GAC/B,kBAACvC,EAAA,EAAD,CAAKC,QAAQ,OAAOE,eAAe,SAAS2E,QAAQ,OAChD,yBAAKpE,MAAO,CAACqE,SAAS,OAAOC,UAAU,QAASC,IAAKU,EAAMxJ,IAAK+I,IAAI,cAMxF,OACI,kBAAClF,EAAA,EAAD,CAAK8E,QAAQ,OACT,kBAAC9E,EAAA,EAAD,CAAKC,QAAQ,OAAOE,eAAe,UAC/B,kBAACG,EAAA,EAAD,CAAYC,QAAQ,KAAKG,MAAO,CAACgJ,WAAW,sBAAuBlJ,cAAY,GAC1EjD,EAAYX,UAAY,IAAMW,EAAYV,WAGnD,kBAACmD,EAAA,EAAD,CAAKS,GAAG,MAAMR,QAAQ,OAAOE,eAAe,UACxC,kBAACU,EAAA,EAAD,CAAQmC,QAAS,WAAKyG,EAAU,YAAhC,oBAGA,kBAAC5I,EAAA,EAAD,CAAQmC,QAAS,WAAKyG,EAAU,WAAhC,SAGA,kBAAC,IAAD,CAAM7I,GAAG,SAAQ,kBAACC,EAAA,EAAD,eAErB,kBAAC8I,GAAA,EAAD,MACA,kBAAC3J,EAAA,EAAD,CAAKS,GAAG,OACQ,WAAX+E,GACG,oCACCb,GAGO,UAAXa,GACG,oCACC,kBAACrD,EAAA,EAAD,CAAMC,WAAS,EAACtD,QAAS,EAAG4B,MAAO,CAACyG,WAAW,OAAOrG,MAAM,SACxD,kBAACqB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACZ,yBAAK5B,MAAO,CAAC7B,MAAM,QAASoG,IAAK1H,EAAYH,OAAO,GAAGjB,IAAK+I,IAAI,SAEnE,kBAAC/C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,kBAACtC,EAAA,EAAD,CAAKU,MAAO,CAAC/B,UAAU,WACnB,kBAAC2B,EAAA,EAAD,CAAYC,QAAQ,KAAKG,MAAO,CAACgJ,WAAW,sBAAuBlJ,cAAY,GAA/E,YAGA,kBAACF,EAAA,EAAD,CAAYC,QAAQ,aAApB,2FAC4FhD,EAAYX,UAAY,IAAMW,EAAYV,SADtI,uFAGA,kBAACmD,EAAA,EAAD,CAAKS,GAAG,OACL,kBAACH,EAAA,EAAD,CAAYC,QAAQ,OAAOG,MAAO,CAACgJ,WAAW,sBAAuBlJ,cAAY,GAAjF,sBAIJ,kBAACR,EAAA,EAAD,CAAKS,GAAG,OACJ,kBAACH,EAAA,EAAD,CAAYC,QAAQ,aAApB,WACahD,EAAYP,OADzB,OAGA,kBAACsD,EAAA,EAAD,CAAYC,QAAQ,aAApB,WACahD,EAAYL,OADzB,QAIJ,kBAAC8C,EAAA,EAAD,CAAKS,GAAG,OACJ,kBAACH,EAAA,EAAD,CAAYC,QAAQ,OAAOG,MAAO,CAACgJ,WAAW,sBAAuBlJ,cAAY,GAAjF,oBAIJ,kBAACR,EAAA,EAAD,CAAKS,GAAG,OACJ,kBAACH,EAAA,EAAD,CAAYC,QAAQ,aAApB,UACYhD,EAAYR,OAExB,kBAACuD,EAAA,EAAD,CAAYC,QAAQ,aAApB,UACYhD,EAAYT,kBD3DpD,kBAAC,IAAD,CAAOwM,KAAK,QAAQC,OAAK,EAACC,UAAWI,KACrC,kBAAC,IAAD,CAAON,KAAK,iBAAiBC,OAAK,EAACC,UEd5B,WACX,IAAMzL,EAAgB0J,aAAY,SAAAjK,GAAK,OAAIA,EAAMO,iBAC3CnC,EAAWwD,cACXuI,EAAUC,cAOViC,EAAe,kBAAC1H,EAAA,EAAD,CAAMC,WAAS,EAACtD,QAAS,GAEtCf,EAAcC,KAAI,SAAAC,GAAS,OACvB,kBAACkE,EAAA,EAAD,CAAMoG,IAAKtK,EAAUC,GAAImE,MAAI,EAACC,GAAI,EAAGC,GAAI,GACrC,kBAACvC,EAAA,EAAD,CAAKC,QAAQ,OAAOE,eAAe,SAASC,cAAc,SAASC,WAAW,SAASyE,QAAQ,OAC3F,yBAAKpE,MAAO,CAACqE,SAAS,OAAOC,UAAU,QAASC,IAAKhH,EAAU6B,KAAK1C,OAAO,GAAGjB,IAAK+I,IAAI,QACvF,kBAAC5E,EAAA,EAAD,CAAYC,QAAQ,aACftC,EAAU6B,KAAKlD,UAAW,IAAMqB,EAAU6B,KAAKjD,UAEpD,kBAACgE,EAAA,EAAD,CAAQmC,QAAS,WAbjCpH,EAASc,EAa2CuB,EAbrB6B,OAC/B6H,EAAQmB,KAAK,gBAYG,cAMpB,OACI,kBAAC9I,EAAA,EAAD,CAAK8E,QAAQ,OACT,kBAAC9E,EAAA,EAAD,CAAKC,QAAQ,OAAOE,eAAe,UAC/B,kBAACG,EAAA,EAAD,CAAYC,QAAQ,KAAKG,MAAO,CAACgJ,WAAW,sBAAuBlJ,cAAY,GAA/E,kBAIJ,kBAACR,EAAA,EAAD,CAAKS,GAAG,MAAMR,QAAQ,OAAOE,eAAe,WAE5C,kBAACwJ,GAAA,EAAD,MACCE,SFjBXC,SAASC,eAAe,SDwGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlO,MAAK,SAAAmO,GACJA,EAAaC,gBAEdhO,OAAM,SAAAG,GACLD,QAAQC,MAAMA,EAAM8N,c","file":"static/js/main.9c91891b.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/firebase-storage';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD8tT4UntK2MJMIidvzc45DbzYRQ2G9jmw\",\n    authDomain: \"fashion-portfolio.firebaseapp.com\",\n    databaseURL: \"https://fashion-portfolio.firebaseio.com\",\n    projectId: \"fashion-portfolio\",\n    storageBucket: \"fashion-portfolio.appspot.com\",\n    messagingSenderId: \"845004346014\",\n    appId: \"1:845004346014:web:093378afd2bdb48987618f\",\n    measurementId: \"G-QLHY6XT343\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const db = firebase.firestore();\nexport const storage = firebase.storage();","import {db,storage} from '../firebase';\n\nexport const UPDATE_PORTFOLIO = 'UPDATE_PORTFOLIO';\nexport const ADD_PORTFOLIO = 'ADD_PORTFOLIO';\nexport const ADD_IMAGE = 'ADD_IMAGE';\nexport const UPDATE_IMAGES = 'UPDATE_IMAGES';\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport const UPDATE_CURRENT = 'UPDATE_CURRENT';\nexport const EMPTY_LIST = 'EMPTY_LIST';\n\nexport function updatePortfolio(payload){\n    return{\n        type: UPDATE_PORTFOLIO,\n        payload\n    }\n}\n\nexport function addPortfolio(payload){\n    return{\n        type: ADD_PORTFOLIO,\n        payload\n    }\n}\n\n\n\nexport function uploadImage(file,ref){\n    return (dispatch)=>{\n        let storageRef = storage.ref().child(ref);\n        storageRef.put(file).then(function(snapshot) {\n            storageRef.getDownloadURL().then(function(url){\n                dispatch(addImage({url,ref}))\n            }).catch(function(err){\n                console.error(\"error in downloading url\",err);\n            })\n        });\n    }\n}\n\nexport function deleteImage(file){\n    return (dispatch)=>{\n        let storageRef = storage.ref().child(file.ref);\n        storageRef.delete().then(function() {\n            dispatch(removeImage(file))\n          }).catch(function(error) {\n              console.error(\"error in deleting file\",error);\n          });\n    }\n    \n}\n\nexport function removeImage(payload){\n    return {\n        type: REMOVE_IMAGE,\n        payload\n    }\n}\n\nexport function addImage(payload){\n    return{\n        type: ADD_IMAGE,\n        payload: payload\n    }\n}\n\nexport function updateCurrent(payload){\n    return{\n        type: UPDATE_CURRENT,\n        payload\n    }\n}\n\nexport function addPortfolioToDB(payload){\n    return (dispatch,getState)=>{\n        db.collection('Users').add(payload).then(function(docRef) {\n            dispatch(addPortfolio({id:docRef.id,data:payload}));\n            payload.id = docRef.id;\n            dispatch(updateCurrent(payload));\n        }).catch(function(error) {\n            console.error(\"Error adding document: \", error);\n        });\n    }\n}\n\nexport function updatePortfolioDB(payload){\n    return (dispatch)=>{\n        db.collection('Users').doc(payload.id).update(payload).then(function(){\n            dispatch(addPortfolio({id:payload.id,data:payload}));\n            dispatch(updateCurrent(payload));\n        }).catch(function(err){\n            console.log(\"error\");\n        })\n    }\n}\n\nexport function emptyList(){\n    return{\n        type: EMPTY_LIST\n    }\n}\n\nexport function loadPortfolios(){\n    return (dispatch,getState)=>{\n        dispatch(emptyList())\n        db.collection('Users').get().then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                console.log(`${doc.id} => ${doc.data()}`);\n                let payload = {};\n                payload.id = doc.id;\n                payload.data = doc.data();\n                payload.data.dob = payload.data.dob ? payload.data.dob.toDate() : '';\n                payload.data.id = doc.id;\n                dispatch(addPortfolio(payload));\n            });\n        });\n          \n    }\n}","import { combineReducers } from 'redux';\n\nimport {\n    ADD_IMAGE,\n    UPDATE_PORTFOLIO,\n    ADD_PORTFOLIO,\n    UPDATE_CURRENT,\n    REMOVE_IMAGE,\n    EMPTY_LIST\n} from '../actions';\n\n\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  mobile: '',\n  email: '',\n  height: '',\n  address: '',\n  weight: '',\n  dob: '',\n  images: []\n}\n\nfunction currentUser(state = initialState, action) {\n    switch (action.type) {\n      case UPDATE_CURRENT:\n        return Object.assign({}, state, action.payload)\n      case ADD_IMAGE:\n        return Object.assign({}, state, {\n          images: state.images.concat(action.payload)\n        })\n      case REMOVE_IMAGE:\n        return Object.assign({}, state, {\n          images: state.images.filter(img=>{\n            return (img.url !== action.payload.url)\n          })\n        })\n      default:\n        return state\n    }\n  }\n\n\nfunction allPortfolios(state=[],action){\n    switch(action.type){\n        case ADD_PORTFOLIO:\n          return [...state,action.payload];\n          \n        case UPDATE_PORTFOLIO:\n          return state.map(portfolio=>{\n            if(portfolio.id === action.payload.id){\n              return action.payload\n            }\n            return portfolio;\n          })\n        case EMPTY_LIST:\n          return []\n        default:\n          return state\n    }\n}\n\nconst rootReducer = combineReducers({\n    currentUser,\n    allPortfolios\n  })\n  \n  export default rootReducer","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport rootReducer from '../reducers'\n\n\n\nexport const store = createStore(\n    rootReducer,\n    applyMiddleware(thunkMiddleware)\n)","import React from 'react';\n\nimport { Link } from \"react-router-dom\";\n\nimport { useDispatch } from \"react-redux\";\nimport {loadPortfolios} from '../actions';\n\nimport {Button,Box,Typography} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    box:{\n        textAlign: 'center',\n    },\n    button1:{\n        width: theme.spacing(25),\n        height: theme.spacing(6)\n    },\n    caption:{\n        fontSize: '1.2em'\n    },\n    button2:{\n        width: theme.spacing(25),\n        height: theme.spacing(6),\n        marginTop: '1em'\n    }\n  }));\n\nexport default ()=>{\n\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    React.useEffect(()=>{\n        dispatch(loadPortfolios());\n    },[])\n    return(\n        <div>\n            <Box display=\"flex\" className={classes.box} justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\n                <Typography variant=\"h3\" gutterBottom>\n                    Fashion Portfolio\n                </Typography>\n                <Typography className={classes.caption} variant=\"caption\" display=\"block\" gutterBottom>\n                Fashion is the armor to survive the reality of everyday life.\n                </Typography>\n                <Typography variant=\"subtitle2\" gutterBottom>\n                Bill Cunningham\n                </Typography>\n            </Box>\n            <Box mt=\"3em\" display=\"flex\" justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\n            <Link style={{textDecoration:'none'}} to=\"/create\"><Button variant=\"contained\" className={classes.button1} color=\"primary\">Create portfolio</Button></Link>\n\n            <Link style={{textDecoration:'none'}} to=\"/portfoliogrid\"><Button className={classes.button2} variant=\"outlined\">View portfolios</Button></Link>\n            </Box>\n           \n        </div>\n    )\n}","import React from 'react';\nimport './App.css';\nimport Homepage from './components/Homepage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Homepage />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nimport { Grid,TextField, Button,Box } from '@material-ui/core';\nimport { withFormik } from \"formik\";\nimport * as Yup from 'yup';\n\n\nconst profileDetailForm = (props)=>{\n    const {\n        classes,\n        values,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n      } = props;\n    return(\n        <Grid container spacing={2}>\n            <Grid item xs={12} md={6}>\n                <TextField\n                    id=\"firstName\"\n                    label=\"First Name\"\n                    value={values.firstName}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    helperText={touched.firstName ? errors.firstName : \"\"}\n                    error={touched.firstName && Boolean(errors.firstName)}\n                    variant=\"outlined\"\n                    className={classes.txtField}\n                />\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <TextField\n                    id=\"lastName\"\n                    label=\"Last Name\"\n                    value={values.lastName}\n                    variant=\"outlined\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    helperText={touched.lastName ? errors.lastName : \"\"}\n                    error={touched.lastName && Boolean(errors.lastName)}\n                    className={classes.txtField}\n\n                />\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <TextField\n                    id=\"email\"\n                    label=\"Email\"\n                    value={values.email}\n                    className={classes.txtField}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    helperText={touched.email ? errors.email : \"\"}\n                    error={touched.email && Boolean(errors.email)}\n                    variant=\"outlined\"\n                />\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <TextField\n                    id=\"mobile\"\n                    label=\"Contact number\"\n                    value={values.mobile}\n                    className={classes.txtField}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    helperText={touched.mobile ? errors.mobile : \"\"}\n                    error={touched.mobile && Boolean(errors.mobile)}\n                    variant=\"outlined\"\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <Box mt=\"1em\">\n                    <Button type=\"button\" variant=\"contained\" onClick={handleSubmit} className={classes.button} color=\"primary\">Next</Button>\n                </Box>\n            </Grid>\n        </Grid>\n    )\n}\n\nconst ProfileDetailForm = withFormik({\n        mapPropsToValues: ({\n          firstName,\n          lastName,\n          email,\n          mobile,\n        }) => {\n          return {\n            firstName: firstName || \"\",\n            lastName: lastName || \"\",\n            email: email || \"\",\n            mobile: mobile || \"\",\n          };\n        },\n      \n        validationSchema: Yup.object().shape({\n          firstName: Yup.string().required(\"Required\"),\n          lastName: Yup.string().required(\"Required\"),\n          email: Yup.string().email(\"Enter a valid email\").required(\"Email is required\"),\n          mobile: Yup.string().matches(/^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/, 'Phone number is not valid').required(\"Contact number is required\"),\n        }),\n      \n        handleSubmit: (values,bag) => {\n          bag.props.handleFieldsChange(values);\n          bag.props.handleNext();\n          \n        }\n      })(profileDetailForm);\n    \n    export default ProfileDetailForm;\n","import React from 'react';\n\nimport { Grid,TextField,Box,Button } from '@material-ui/core';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { withFormik } from \"formik\";\nimport * as Yup from 'yup';\n\nconst generalDetailForm = (props)=>{\n    const {\n        classes,\n        values,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        handleBack,\n        setFieldValue\n    } = props;\n    return(\n        <Grid container spacing={2}>\n            <Grid item xs={12} md={6}>\n                <TextField\n                    id=\"height\"\n                    label=\"Height in cm\"\n                    value={values.height}\n                    variant=\"outlined\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    helperText={touched.height ? errors.height : \"\"}\n                    error={touched.height && Boolean(errors.height)}\n                    className={classes.txtField}\n                />\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <TextField\n                    id=\"weight\"\n                    label=\"Weight in kg\"\n                    value={values.weight}\n                    variant=\"outlined\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    helperText={touched.weight ? errors.weight : \"\"}\n                    error={touched.weight && Boolean(errors.weight)}\n                    className={classes.txtField}\n\n                />\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <TextField\n                    id=\"address\"\n                    label=\"Full address\"\n                    value={values.address}\n                    className={classes.txtField}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    helperText={touched.address ? errors.address : \"\"}\n                    error={touched.address && Boolean(errors.address)}\n                    variant=\"outlined\"\n                />\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDatePicker\n                        variant=\"inline\"\n                        inputVariant=\"outlined\"\n                        format=\"MM/dd/yyyy\"\n                        id=\"dob\"\n                        placeholder=\"MM/dd/yyyy\"\n                        label=\"Date of birth\"\n                        value={values.dob}\n                        onChange={date => setFieldValue('dob', date, false)}\n                        onBlur={handleBlur}\n                        helperText={touched.dob ? errors.dob : \"\"}\n                        error={touched.dob && Boolean(errors.dob)}\n                        className={classes.datepicker}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item xs={12}>\n                <Box mt=\"1em\">\n                    <Button\n                        onClick={handleBack}\n                        className={classes.button}\n                    >\n                    Back\n                    </Button>\n                    <Button type=\"button\" variant=\"contained\" onClick={handleSubmit} className={classes.button} color=\"primary\">Next</Button>\n                </Box>\n            </Grid>\n        </Grid>\n    )\n}\n\nconst GeneralDetailForm = withFormik({\n    mapPropsToValues: ({\n      height,\n      weight,\n      dob,\n      address\n    }) => {\n      return {\n        height: height || \"\",\n        weight: weight || \"\",\n        dob: dob || new Date(),\n        address: address || \"\"\n      };\n    },\n  \n    validationSchema: Yup.object().shape({\n      height: Yup.number()\n      .required(\"Enter your height\")\n      .positive()\n      .integer(),\n      weight: Yup.number()\n      .required(\"Enter your weight\")\n      .positive(),\n      dob: Yup.date().default(new Date()).required('Date of birth is required'),\n      address: Yup.string().required(\"Address is Required\")\n    }),\n  \n    handleSubmit: (values, bag) => {\n        bag.props.handleFieldsChange(values);\n        bag.props.handleNext();\n    }\n  })(generalDetailForm);\n\nexport default GeneralDetailForm;","import React from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport {uploadImage,deleteImage} from '../actions';\nimport 'react-dropzone-uploader/dist/styles.css';\nimport Dropzone from 'react-dropzone-uploader';\n\nimport { Box,Button, Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useDispatch } from \"react-redux\";\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default (props)=>{\n    const [portfolioImages,setPortfolioImages] = React.useState([]);\n    const dispatch = useDispatch();\n    const [open, setOpen] = React.useState(false);\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        setOpen(false);\n      };\n    const {\n        classes,\n        images\n    } = props;\n    // called every time a file's `status` changes\n    const handleChangeStatus = ({ meta, file }, status) => { \n        console.log(status, meta, file) \n        if(status === 'done'){\n            let ref = 'images/' + uuidv4();\n            setPortfolioImages(portfolioImages.concat({file,ref}));\n            dispatch(uploadImage(file,ref));\n        }\n        if(status === 'removed'){\n            portfolioImages.map(image=>{\n                if(image.file.name===file.name){\n                    dispatch(deleteImage(image))\n                }\n                return null\n            })\n            setPortfolioImages(portfolioImages.filter((f)=>f.file.name !== file.name));\n\n        }\n    }\n    let imageGrid = \"\";\n    if(images && images.length>0){\n        imageGrid = <Grid container spacing={2}>\n                    {\n                        images.map((img,i)=>(\n                            <Grid item xs={6} md={4}>\n                                <Box display=\"flex\" justifyContent=\"center\" padding=\"1em\">\n                                    <img style={{maxWidth:'20vw',maxHeight:'30vh'}} src={img.url} alt=\"img\" />\n                                </Box> \n                            </Grid>\n                        ))\n                    }\n                    </Grid>\n    }\n\n    const handleNext = ()=>{\n\n        if(portfolioImages.length<3){\n            if(!(images && images.length>0)){\n                setOpen(true);\n                return;\n            }\n        }\n        props.handleSubmit();\n    }\n\n    return(\n        <Box>\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"error\">\n                    Please select at least 3 Images.\n                </Alert>\n            </Snackbar>\n            <Box>\n                {imageGrid}\n            </Box>\n            <Box mt=\"2em\">\n                <Dropzone\n                    onChangeStatus={handleChangeStatus}\n                    accept=\"image/*\"\n                    maxSizeBytes={5242880}\n                    inputContent={(files, extra) => (extra.reject ? 'Image, audio and video files only' : 'Drag Portfolio Images or Click to Browse')}\n                    inputWithFilesContent = \"Add more images\"\n                    styles={{\n                        dropzone:{overflow:'hidden',minHeight:'9em'},\n                        dropzoneReject: { borderColor: 'red', backgroundColor: '#DAA' },\n                        inputLabel: (files, extra) => (extra.reject ? { color: 'red' } : {}),\n                        preview: {justifyContent:'center'},\n                        inputLabelWithFiles: {alignSelf: 'center',margin:'1em'},\n                        previewImage: {maxWidth:'60%',maxHeight: '60vh'}\n                    }}\n                />\n            </Box>\n            <Box mt=\"2em\">\n                <Button\n                        onClick={props.handleBack}\n                        className={classes.button}\n                    >\n                    Back\n                    </Button>\n                <Button type=\"button\" variant=\"contained\" onClick={handleNext} className={classes.button} color=\"primary\">Submit</Button>\n            </Box>\n            \n        </Box>\n        \n    )\n}","import React from 'react';\n\nimport ProfileDetails from './ProfileDetails';\nimport GeneralDetails from './GeneralDetails';\nimport ImagesForm from './ImagesForm';\n\nimport {addPortfolioToDB} from '../actions';\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\n\n//material ui\nimport { Container,Typography,Stepper,Step,StepLabel,Box} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    mainGrid:{\n        background: '#f2f2f2',\n        minHeight: '100vh'\n    },\n    formContainer: {\n        padding: '2em',\n        background: '#fff',\n        borderRadius: '0.5em',\n        textAlign:'center',\n    },\n    txtField:{\n        width: '100%'\n    },\n    button: {\n        marginRight: theme.spacing(1),\n        width: '10em'\n    },\n    datepicker:{\n        width: '100%'\n    }\n}));\n\nconst initialValues = {\n    firstName: '',\n    lastName: '',\n    mobile: '',\n    email: '',\n    height: '',\n    address: '',\n    weight: '',\n    dob: '',\n    images: []\n}\n\nconst UserForm = props =>{\n\n    const currentUser = useSelector(state => state.currentUser);\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    const [values, setValues] = React.useState(initialValues);\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = ['Profile Detail', 'General Detail', 'Portfolio Images'];\n    \n\n    \n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleChange = (receivedValues)=>{\n        setValues(Object.assign({},values,receivedValues));\n    }\n\n    const handleSubmit = ()=>{\n        values.images = currentUser.images\n        setValues(values);\n        dispatch(addPortfolioToDB(values));\n        history.push('/portfolio');\n    }\n\n    \n    return (\n            <Box className={classes.mainGrid} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <Container maxWidth=\"md\" className={classes.formContainer}>\n                    <Typography variant=\"h4\" gutterBottom>\n                        Create your fashion portfolio\n                    </Typography>\n                    <Box mt=\"1em\">\n                        <Stepper activeStep={activeStep} alternativeLabel>\n                            {steps.map((label, index) => {\n                                const stepProps = {};\n                                const labelProps = {};\n                                return (\n                                    <Step key={label} {...stepProps}>\n                                    <StepLabel {...labelProps}>{label}</StepLabel>\n                                    </Step>\n                                );\n                            })}\n                        </Stepper>\n                    </Box>\n                    <Box mt=\"1em\">\n                        {\n                            activeStep === 0 &&\n                            <ProfileDetails firstName={values.firstName} lastName={values.lastName} email={values.email} mobile={values.mobile} classes={classes} handleNext={handleNext} handleFieldsChange={handleChange}  />\n                            \n                        }\n                        {\n                            activeStep === 1 && \n                            <GeneralDetails address={values.address} height={values.height} weight={values.weight} dob={values.dob} values={values} classes={classes} handleNext={handleNext} handleBack={handleBack} handleFieldsChange={handleChange} />\n                        }\n                        {\n                            activeStep === 2 && \n                            <ImagesForm values={values} classes={classes} handleBack={handleBack} handleSubmit={handleSubmit} /> \n                        }\n                    </Box>                         \n                    </Container>\n            </Box>\n    )\n}\n\nexport default UserForm;","import React from 'react';\n\nimport ProfileDetails from './ProfileDetails';\nimport GeneralDetails from './GeneralDetails';\nimport ImagesForm from './ImagesForm';\nimport {updatePortfolioDB} from '../actions';\nimport { useHistory } from \"react-router-dom\";\n\n\nimport { useSelector,useDispatch } from \"react-redux\";\n\n//material ui\nimport { Container,Typography,Stepper,Step,StepLabel,Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    mainGrid:{\n        background: '#f2f2f2',\n        minHeight: '100vh'\n    },\n    formContainer: {\n        padding: '2em',\n        background: '#fff',\n        borderRadius: '0.5em',\n        textAlign:'center'\n    },\n    txtField:{\n        width: '100%'\n    },\n    button: {\n        marginRight: theme.spacing(1),\n        width: '10em'\n    },\n    datepicker:{\n        width: '100%'\n    }\n}));\n\nconst initialValues = {\n    firstName: '',\n    lastName: '',\n    mobile: '',\n    email: '',\n    height: '',\n    address: '',\n    weight: '',\n    dob: '',\n    files: []\n}\n\nconst UserForm = props =>{\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const currentUser = useSelector(state => state.currentUser);\n    const [values, setValues] = React.useState(currentUser ? currentUser : initialValues);\n\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = ['Profile Detail', 'General Detail', 'Portfolio Images'];\n    \n\n    \n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleChange = (receivedValues)=>{\n        setValues(Object.assign({},values,receivedValues));\n    }\n\n    const handleSubmit = ()=>{\n        values.images = currentUser.images\n        setValues(values);\n        dispatch(updatePortfolioDB(values));\n        history.push('/portfolio')\n    }\n\n    \n    \n\n    return (\n            <Box className={classes.mainGrid} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <Container maxWidth=\"md\" className={classes.formContainer}>\n                    <Typography variant=\"h4\" gutterBottom>\n                        Edit portfolio\n                    </Typography>\n                    <Box mt=\"1em\">\n                        <Stepper activeStep={activeStep} alternativeLabel>\n                            {steps.map((label, index) => {\n                                const stepProps = {};\n                                const labelProps = {};\n                                return (\n                                    <Step key={label} {...stepProps}>\n                                    <StepLabel {...labelProps}>{label}</StepLabel>\n                                    </Step>\n                                );\n                            })}\n                        </Stepper>\n                    </Box>\n                    <Box mt=\"1em\">\n                        {\n                            activeStep === 0 &&\n                            <ProfileDetails firstName={values.firstName} lastName={values.lastName} email={values.email} mobile={values.mobile} classes={classes} handleNext={handleNext} handleFieldsChange={handleChange}  />\n                            \n                        }\n                        {\n                            activeStep === 1 && \n                            <GeneralDetails address={values.address} height={values.height} weight={values.weight} dob={values.dob} values={values} classes={classes} handleNext={handleNext} handleBack={handleBack} handleFieldsChange={handleChange} />\n                        }\n                        {\n                            activeStep === 2 && \n                            <ImagesForm values={values} classes={classes} handleSubmit={handleSubmit} handleBack={handleBack} images={currentUser.images} /> \n                        }\n                    </Box>                         \n                    </Container>\n                </Box>\n    )\n}\n\nexport default UserForm;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { store } from './store/index';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport UserForm from './components/UserForm';\nimport PortFolio from './components/Portfolio';\nimport PortfolioGrid from './components/PorfolioGrid';\nimport EditUser from './components/EditUser';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <Provider store={store} >\n    <Router>\n      <div>\n        <Route path=\"/\" exact component={App} />\n        <Route path=\"/create\" exact component={UserForm} />\n        <Route path=\"/portfolio\" exact component={PortFolio} />\n        <Route path=\"/edit\" exact component={EditUser} />\n        <Route path='/portfoliogrid' exact component={PortfolioGrid} />\n      </div>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Box, Typography,Button, Divider,Grid } from '@material-ui/core';\n\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\n\nexport default ()=>{\n    const currentUser = useSelector(state => state.currentUser);\n    const [status,setStatus] = React.useState('images');\n    const imageGrid = <Grid container spacing={2}>\n        {\n            currentUser.images.map((image,index)=>(\n                <Grid key={index} item xs={12} md={6}>\n                    <Box display=\"flex\" justifyContent=\"center\" padding=\"1em\">\n                        <img style={{maxWidth:'35vw',maxHeight:'80vh'}} src={image.url} alt=\"img\" />\n                    </Box>  \n                </Grid>\n            ))\n        }\n    </Grid>\n    return(\n        <Box padding=\"1em\">\n            <Box display=\"flex\" justifyContent=\"center\">\n                <Typography variant=\"h5\" style={{fontFamily:'Cormorant Garamond'}} gutterBottom>\n                    {currentUser.firstName + ' ' + currentUser.lastName}\n                </Typography>\n            </Box>\n            <Box mt=\"1em\" display=\"flex\" justifyContent=\"center\">\n                <Button onClick={()=>{setStatus('images')}}>\n                    Portfolio Images\n                </Button>\n                <Button onClick={()=>{setStatus('about')}}>\n                    About\n                </Button>\n                <Link to=\"/edit\"><Button>Edit</Button></Link>\n            </Box>\n            <Divider />\n            <Box mt=\"1em\">\n                {status === 'images' &&\n                    <>\n                    {imageGrid}\n                    </>\n                }\n                {status === 'about' && \n                    <>\n                     <Grid container spacing={2} style={{background:'#000',color:'#fff'}}>\n                         <Grid item xs={6}>\n                            <img style={{width:'100%'}} src={currentUser.images[0].url} alt=\"img\" />\n                         </Grid>\n                         <Grid item xs={6}>\n                             <Box style={{textAlign:'center',}}>\n                                 <Typography variant=\"h5\" style={{fontFamily:'Cormorant Garamond'}} gutterBottom>\n                                     About Me\n                                 </Typography>\n                                 <Typography variant=\"subtitle2\">\n                                    Follower of the highness dreams with a hardworking, positive attitude. Hello my name is {currentUser.firstName + ' ' + currentUser.lastName} and I can say that I am a very motivated and strong individual from the inside out\n                                 </Typography>\n                                 <Box mt=\"1em\">\n                                    <Typography variant=\"body\" style={{fontFamily:'Cormorant Garamond'}} gutterBottom>\n                                        Modal Measurement\n                                    </Typography>\n                                </Box>\n                                <Box mt=\"1em\">\n                                    <Typography variant=\"subtitle2\">\n                                        Height: {currentUser.height} cm\n                                    </Typography>\n                                    <Typography variant=\"subtitle2\">\n                                        Weight: {currentUser.weight} kg\n                                    </Typography>\n                                </Box>\n                                <Box mt=\"1em\">\n                                    <Typography variant=\"body\" style={{fontFamily:'Cormorant Garamond'}} gutterBottom>\n                                        Contact Details\n                                    </Typography>\n                                </Box>\n                                <Box mt=\"1em\">\n                                    <Typography variant=\"subtitle2\">\n                                        Email: {currentUser.email}\n                                    </Typography>\n                                    <Typography variant=\"subtitle2\">\n                                        Phone: {currentUser.mobile}\n                                    </Typography>\n                                </Box>\n                                \n                             </Box>\n                         </Grid>\n                     </Grid>\n                    </>\n                }\n            </Box>\n\n        </Box>\n    )\n}","import React from 'react';\nimport { Box, Typography,Button, Divider,Grid } from '@material-ui/core';\n\nimport { useSelector,useDispatch } from \"react-redux\";\nimport {updateCurrent} from '../actions';\n\nimport { useHistory } from \"react-router-dom\";\n\n\nexport default ()=>{\n    const allPortfolios = useSelector(state => state.allPortfolios);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    \n    const openPortfolio = (payload)=>{\n        dispatch(updateCurrent(payload.data));\n        history.push('/portfolio');\n    }\n\n    const porfolioGrid = <Grid container spacing={2}>\n        {\n            allPortfolios.map(portfolio=>(\n                <Grid key={portfolio.id} item xs={6} md={4}>\n                    <Box display=\"flex\" justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\" padding=\"1em\">\n                        <img style={{maxWidth:'20vw',maxHeight:'40vh'}} src={portfolio.data.images[0].url} alt=\"img\" />\n                        <Typography variant=\"subtitle2\">\n                            {portfolio.data.firstName +' ' + portfolio.data.lastName}\n                        </Typography>\n                        <Button onClick={()=>{openPortfolio(portfolio)}}>Open</Button>\n                    </Box> \n                </Grid>\n            ))\n        }\n    </Grid>\n    return(\n        <Box padding=\"1em\">\n            <Box display=\"flex\" justifyContent=\"center\">\n                <Typography variant=\"h5\" style={{fontFamily:'Cormorant Garamond'}} gutterBottom>\n                    All Porfolios\n                </Typography>\n            </Box>\n            <Box mt=\"1em\" display=\"flex\" justifyContent=\"center\">\n            </Box>\n            <Divider />\n            {porfolioGrid}\n\n\n        </Box>\n    )\n}"],"sourceRoot":""}